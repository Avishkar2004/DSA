
Tree Recursion: To understand Tree Recursion let’s first understand Linear Recursion. If a recursive function calling itself for one time then it’s known as Linear Recursion. Otherwise if a recursive function calling itself for more than one time then it’s known as Tree Recursion.

Pseudo Code for linear recursion :-


fun(n)
{
    // some code
    if(n>0)
    {
        fun(n-1); // Calling itself only once
    }
    // some code
}


Program for tree recursion :- 

function fun(n) {
    if( n > 0) {
        console.log(" " + n);

        <!-- calling once -->
        function(n - 1)
        <!-- calling twice -->
        fun(n - 1);
    }
}

<!-- Drive code -->
fun(3)


Output
 3 2 1 1 2 1 1

Time Complexity For Tree Recursion: O(2^n) 
Space Complexity For Tree Recursion: O(n)
Note: Time & Space Complexity is given for this specific example. It may vary for another example.

Tree tracing recusion