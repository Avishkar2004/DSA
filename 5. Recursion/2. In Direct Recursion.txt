Q: What is the difference between direct and indirect recursion?
A: Direct recursion is when a function calls itself directly, while indirect recursion is when a function calls another function, which then calls the original function.


eg :- 
// Initialize variables
let money = 100;     // Initial amount of money
let totalapple = 0;  // Total apples bought

// Function to buy apples
function buyApple(x) {
  // Check if there is enough money to buy apples
  if (x > 0) {
    console.log("I Have", x, "RS", totalapple);  // Print the current state (money and total apples)
    buyMore(x);  // Call the function to buy more apples
  } else {
    console.log("I dont have more money", totalapple);  // Print if there is not enough money
  }
}

// Function to buy more apples recursively
function buyMore(x) {
  totalapple++;  // Increment the total apples bought
  buyApple(x - 20);  // Recursively call buyApple with reduced money (20 Rs less per apple)
}

// Initial call to buyApple with the initial amount of money
buyApple(money);


I Have 100 RS 0
I Have 80 RS 1
I Have 60 RS 2
I Have 40 RS 3
I Have 20 RS 4
I dont have more money 5


=============
function functionA(n) {
    if (n > 0) {
        console.log("In functionA with n =", n);
        functionB(n - 1); // Call functionB with n-1
    }
}

function functionB(n) {
    if (n > 0) {
        console.log("In functionB with n =", n);
        functionA(n - 1); // Call functionA with n-1
    }
}

// Start the indirect recursion
functionA(3);
